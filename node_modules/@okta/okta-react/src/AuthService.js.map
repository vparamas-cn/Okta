{"version":3,"sources":["../../src/AuthService.js"],"names":["AuthService","config","testing","disableHttpsCheck","authConfig","issuer","clientId","redirectUri","_oktaAuth","OktaAuth","userAgent","_config","_pending","handleAuthentication","bind","updateAuthState","clearAuthState","emitAuthState","getAuthState","getUser","getIdToken","getAccessToken","login","logout","_convertLogoutPathToOptions","redirect","emit","on","tokenManager","token","parseFromUrl","tokens","idToken","add","accessToken","authState","isAuthenticated","location","getFromUri","window","assign","error","state","DEFAULT_STATE","_authState","authStateUpdate","promise","Promise","resolve","get","claims","undefined","getUserInfo","fromUri","additionalParams","handleLogin","isPending","setFromUri","onAuthRequired","charAt","origin","postLogoutRedirectUri","options","signOut","params","responseType","scopes","getWithRedirect","href","sessionStorage","setItem","referrerKey","getItem","removeItem","event","callback","emitter","off","message"],"mappings":";;;;;;;;;;;;;;;;;;;AAWA;;AAMA;;;;;;IAEMA,W;AACJ,uBAAYC,MAAZ,EAAoB;AAAA;AAClB,QAAMC,OAAO,GAAG;AACd;AACAC,MAAAA,iBAAiB,EAAE,CAAC,CAACF,MAAM,CAACE;AAFd,KAAhB,CADkB,CAMlB;;AACA,QAAMC,UAAU,GAAG,gDAAkBH,MAAlB,CAAnB;AACA,+CAAaG,UAAU,CAACC,MAAxB,EAAgCH,OAAhC;AACA,iDAAeE,UAAU,CAACE,QAA1B;AACA,oDAAkBF,UAAU,CAACG,WAA7B;AAEA,SAAKC,SAAL,GAAiB,IAAIC,sBAAJ,CAAaL,UAAb,CAAjB;AACA,SAAKI,SAAL,CAAeE,SAAf,kEAAyF,KAAKF,SAAL,CAAeE,SAAxG;AACA,SAAKC,OAAL,GAAeP,UAAf,CAdkB,CAcS;;AAC3B,SAAKQ,QAAL,GAAgB,EAAhB,CAfkB,CAeE;;AAEpB,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKK,OAAL,GAAe,KAAKA,OAAL,CAAaL,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKM,UAAL,GAAkB,KAAKA,UAAL,CAAgBN,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKO,cAAL,GAAsB,KAAKA,cAAL,CAAoBP,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKQ,KAAL,GAAa,KAAKA,KAAL,CAAWR,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKS,MAAL,GAAc,KAAKA,MAAL,CAAYT,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKU,2BAAL,GAAmC,KAAKA,2BAAL,CAAiCV,IAAjC,CAAsC,IAAtC,CAAnC;AACA,SAAKW,QAAL,GAAgB,KAAKA,QAAL,CAAcX,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKY,IAAL,GAAY,KAAKA,IAAL,CAAUZ,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKa,EAAL,GAAU,KAAKA,EAAL,CAAQb,IAAR,CAAa,IAAb,CAAV;AAEA,SAAKE,cAAL,GAhCkB,CAkClB;AACA;;AACA,SAAKW,EAAL,CAAQ,SAAR,EAAmB,KAAKZ,eAAxB;AACD;;;;sCAEiB;AAChB,aAAO,KAAKP,SAAL,CAAeoB,YAAtB;AACD;;;;;;;;;;;qBAGI,KAAKhB,QAAL,CAAcC,oB;;;;;iDAER,I;;;;AAGP,qBAAKD,QAAL,CAAcC,oBAAd,GAAqC,IAArC;;uBACuB,KAAKL,SAAL,CAAeqB,KAAf,CAAqBC,YAArB,E;;;;AAAhBC,gBAAAA,M,yBAAAA,M;;AAEP,oBAAIA,MAAM,CAACC,OAAX,EAAoB;AAClB,uBAAKxB,SAAL,CAAeoB,YAAf,CAA4BK,GAA5B,CAAgC,SAAhC,EAA2CF,MAAM,CAACC,OAAlD;AACD;;AACD,oBAAID,MAAM,CAACG,WAAX,EAAwB;AACtB,uBAAK1B,SAAL,CAAeoB,YAAf,CAA4BK,GAA5B,CAAgC,aAAhC,EAA+CF,MAAM,CAACG,WAAtD;AACD;;;uBAEK,KAAKnB,eAAL,E;;;AACAoB,gBAAAA,S,GAAY,KAAKjB,YAAL,E;;AAClB,oBAAGiB,SAAS,CAACC,eAAb,EAA8B;AACtBC,kBAAAA,QADsB,GACX,KAAKC,UAAL,EADW;AAE5BC,kBAAAA,MAAM,CAACF,QAAP,CAAgBG,MAAhB,CAAuBH,QAAvB;AACD;;AACD,qBAAKzB,QAAL,CAAcC,oBAAd,GAAqC,IAArC;;;;;;;AAEA,qBAAKD,QAAL,CAAcC,oBAAd,GAAqC,IAArC;AACA,qBAAKI,aAAL,CAAmB;AACjBmB,kBAAAA,eAAe,EAAE,KADA;AAEjBK,kBAAAA,KAAK,aAFY;AAGjBT,kBAAAA,OAAO,EAAE,IAHQ;AAIjBE,kBAAAA,WAAW,EAAE;AAJI,iBAAnB;;;;;;;;;;;;;;;;;;;;;qCAUqB;AAAA,UAAVQ,KAAU,uEAAJ,EAAI;AACvB,WAAKzB,aAAL,iCAAwBjB,WAAW,CAAC2C,aAApC,GAAsDD,KAAtD;AACA;AACD;;;kCAEaA,K,EAAO;AACnB,WAAKE,UAAL,GAAkBF,KAAlB;AACA,WAAKhB,IAAL,CAAU,iBAAV,EAA6B,KAAKR,YAAL,EAA7B;AACA;AACD;;;mCAEc;AACb,aAAO,KAAK0B,UAAZ;AACD;;;;;;;;;;;;qBAIK,KAAKhC,QAAL,CAAciC,e;;;;;kDACT,KAAKjC,QAAL,CAAciC,eAAd,CAA8BC,O;;;AAGvC;AACA,qBAAKlC,QAAL,CAAciC,eAAd,GAAgC,EAAhC;AACA,qBAAKjC,QAAL,CAAciC,eAAd,CAA8BC,OAA9B,GAAyC,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAa;AACjE;AACA;AACA,kBAAA,KAAI,CAACpC,QAAL,CAAciC,eAAd,CAA8BG,OAA9B,GAAwCA,OAAxC;AACD,iBAJwC,CAAzC,C,CAKA;;AACMH,gBAAAA,e,GAAkB,KAAKjC,QAAL,CAAciC,e;;;uBAGV,KAAKxB,cAAL,E;;;AAApBa,gBAAAA,W;;uBACgB,KAAKd,UAAL,E;;;AAAhBY,gBAAAA,O;;qBAGkB,KAAKrB,OAAL,CAAayB,e;;;;;;uBAAwB,KAAKzB,OAAL,CAAayB,eAAb,E;;;;;;;;+BAAiC,CAAC,EAAIF,WAAW,IAAIF,OAAnB,C;;;AAAzFI,gBAAAA,e;AAEN,qBAAKxB,QAAL,CAAciC,eAAd,GAAgC,IAAhC;AACA,qBAAK5B,aAAL,CAAmB;AACjBmB,kBAAAA,eAAe,EAAfA,eADiB;AAEjBJ,kBAAAA,OAAO,EAAPA,OAFiB;AAGjBE,kBAAAA,WAAW,EAAXA;AAHiB,iBAAnB;;;;;;;AAMA,qBAAKtB,QAAL,CAAciC,eAAd,GAAgC,IAAhC;AACA,qBAAK5B,aAAL,CAAmB;AACjBmB,kBAAAA,eAAe,EAAE,KADA;AAEjBK,kBAAAA,KAAK,cAFY;AAGjBT,kBAAAA,OAAO,EAAE,IAHQ;AAIjBE,kBAAAA,WAAW,EAAE;AAJI,iBAAnB;;;AAOFW,gBAAAA,eAAe,CAACG,OAAhB;kDACOH,eAAe,CAACC,O;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIG,KAAKtC,SAAL,CAAeoB,YAAf,CAA4BqB,GAA5B,CAAgC,aAAhC,C;;;AAApBf,gBAAAA,W;;uBACgB,KAAK1B,SAAL,CAAeoB,YAAf,CAA4BqB,GAA5B,CAAgC,SAAhC,C;;;AAAhBjB,gBAAAA,O;;sBACF,CAACE,WAAD,IAAgB,CAACF,O;;;;;kDACZA,OAAO,GAAGA,OAAO,CAACkB,MAAX,GAAoBC,S;;;kDAG7B,KAAK3C,SAAL,CAAeqB,KAAf,CAAqBuB,WAArB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAKiB,KAAK5C,SAAL,CAAeoB,YAAf,CAA4BqB,GAA5B,CAAgC,SAAhC,C;;;AAAhBjB,gBAAAA,O;kDACCA,OAAO,CAACA,O;;;;;kDAKRmB,S;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAMmB,KAAK3C,SAAL,CAAeoB,YAAf,CAA4BqB,GAA5B,CAAgC,aAAhC,C;;;AAApBf,gBAAAA,W;kDACCA,WAAW,CAACA,W;;;;;kDAKZiB,S;;;;;;;;;;;;;;;;;;;mHAICE,O,EAASC,gB;;;;;qBAChB,KAAK1C,QAAL,CAAc2C,W;;;;;;;;AAKjB,qBAAK3C,QAAL,CAAc2C,WAAd,GAA4B,IAA5B,C,CACA;;AACA,qBAAKtC,aAAL,iCAAwB,KAAKC,YAAL,EAAxB;AAA6CsC,kBAAAA,SAAS,EAAE;AAAxD,oB,CACA;;AACA,qBAAKC,UAAL,CAAgBJ,OAAhB,E,CAA0B;;;;qBAEpB,KAAK1C,OAAL,CAAa+C,c;;;;;;uBACF,KAAK/C,OAAL,CAAa+C,cAAb,CAA4B,IAA5B,C;;;;;;;uBAEF,KAAKjC,QAAL,CAAc6B,gBAAd,C;;;;;;;AAEb,qBAAK1C,QAAL,CAAc2C,WAAd,GAA4B,IAA5B;;;;;;;;;;;;;;;;;;;gDAIwBhD,W,EAAa;AACvC,UAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnC,eAAOA,WAAP;AACD,OAHsC,CAIvC;;;AACA,UAAIA,WAAW,CAACoD,MAAZ,CAAmB,CAAnB,MAA0B,GAA9B,EAAmC;AACjCpD,QAAAA,WAAW,GAAGgC,MAAM,CAACF,QAAP,CAAgBuB,MAAhB,GAAyBrD,WAAvC;AACD;;AACD,aAAO;AACLsD,QAAAA,qBAAqB,EAAEtD;AADlB,OAAP;AAGD;;;;;;;;;;;AAEYuD,gBAAAA,O,8DAAQ,E;AACnBA,gBAAAA,OAAO,GAAG,KAAKtC,2BAAL,CAAiCsC,OAAjC,CAAV;;uBACM,KAAKtD,SAAL,CAAeuD,OAAf,CAAuBD,OAAvB,C;;;AACN,qBAAK9C,cAAL;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGasC,gBAAAA,gB,8DAAmB,E;AAChC;AACIU,gBAAAA,M,GAAS,gDAAkBV,gBAAlB,C,EAEb;;AACAU,gBAAAA,MAAM,CAACC,YAAP,GAAsBD,MAAM,CAACC,YAAP,IACjB,KAAKtD,OAAL,CAAasD,YADI,IAEjB,CAAC,UAAD,EAAa,OAAb,CAFL;AAIAD,gBAAAA,MAAM,CAACE,MAAP,GAAgBF,MAAM,CAACE,MAAP,IACX,KAAKvD,OAAL,CAAauD,MADF,IAEX,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,CAFL;kDAIO,KAAK1D,SAAL,CAAeqB,KAAf,CAAqBsC,eAArB,CAAqCH,MAArC,C;;;;;;;;;;;;;;;;;;+BAGEX,O,EAAS;AAClB;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAId,MAAM,CAACF,QAAP,CAAgB+B,IAArC,CAFkB,CAGlB;;AACA,UAAIf,OAAO,CAACM,MAAR,CAAe,CAAf,MAAsB,GAA1B,EAA+B;AAC7BN,QAAAA,OAAO,GAAGd,MAAM,CAACF,QAAP,CAAgBuB,MAAhB,GAAyBP,OAAnC;AACD;;AACDgB,MAAAA,cAAc,CAACC,OAAf,CAAwB,0BAAxB,EAAoDjB,OAApD;AACD;;;iCAEY;AACX,UAAMkB,WAAW,GAAG,0BAApB;AACA,UAAMlC,QAAQ,GAAGgC,cAAc,CAACG,OAAf,CAAuBD,WAAvB,KAAuChC,MAAM,CAACF,QAAP,CAAgBuB,MAAxE;AACAS,MAAAA,cAAc,CAACI,UAAf,CAA0BF,WAA1B;AACA,aAAOlC,QAAP;AACD;;;uBAEGqC,K,EAAOC,Q,EAAW;AAAA;;AACpB,WAAKnE,SAAL,CAAeoE,OAAf,CAAuBjD,EAAvB,CAA0B+C,KAA1B,EAAiCC,QAAjC,EAA2C,KAAKnE,SAAL,CAAeoE,OAA1D;;AACA,aAAO,YAAM;AACX,QAAA,MAAI,CAACpE,SAAL,CAAeoE,OAAf,CAAuBC,GAAvB,CAA2BH,KAA3B,EAAkCC,QAAlC;AACD,OAFD;AAGD;;;yBAEID,K,EAAOI,O,EAAU;AACpB,WAAKtE,SAAL,CAAeoE,OAAf,CAAuBlD,IAAvB,CAA4BgD,KAA5B,EAAmCI,OAAnC;AACD;;;;;AAIH9E,WAAW,CAAC2C,aAAZ,GAA4B;AAC1Ba,EAAAA,SAAS,EAAE,IADe;AAE1BpB,EAAAA,eAAe,EAAE,IAFS;AAG1BJ,EAAAA,OAAO,EAAE,IAHiB;AAI1BE,EAAAA,WAAW,EAAE;AAJa,CAA5B;eAOelC,W","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport {\n  assertIssuer,\n  assertClientId,\n  assertRedirectUri,\n  buildConfigObject\n} from '@okta/configuration-validation';\nimport OktaAuth from '@okta/okta-auth-js';\n\nclass AuthService {\n  constructor(config) {\n    const testing = {\n      // If the config is undefined, cast it to false\n      disableHttpsCheck: !!config.disableHttpsCheck\n    };\n\n    // normalize authJS config. In this SDK, we allow underscore on certain properties, but AuthJS consistently uses camel case.\n    const authConfig = buildConfigObject(config);\n    assertIssuer(authConfig.issuer, testing);\n    assertClientId(authConfig.clientId);\n    assertRedirectUri(authConfig.redirectUri);\n\n    this._oktaAuth = new OktaAuth(authConfig);\n    this._oktaAuth.userAgent = `${process.env.PACKAGE_NAME}/${process.env.PACKAGE_VERSION} ${this._oktaAuth.userAgent}`;\n    this._config = authConfig; // use normalized config\n    this._pending = {}; // manage overlapping async calls \n\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.updateAuthState = this.updateAuthState.bind(this);\n    this.clearAuthState = this.clearAuthState.bind(this);\n    this.emitAuthState = this.emitAuthState.bind(this);\n    this.getAuthState = this.getAuthState.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this._convertLogoutPathToOptions = this._convertLogoutPathToOptions.bind(this);\n    this.redirect = this.redirect.bind(this);\n    this.emit = this.emit.bind(this);\n    this.on = this.on.bind(this);\n\n    this.clearAuthState();\n\n    // Remove expired token or renew token if autoRenew is true\n    // This process will keep authState synced with states in tokenManager\n    this.on('expired', this.updateAuthState);\n  }\n\n  getTokenManager() {\n    return this._oktaAuth.tokenManager;\n  }\n\n  async handleAuthentication() {\n    if(this._pending.handleAuthentication) { \n      // Don't trigger second round\n      return null;\n    }\n    try { \n      this._pending.handleAuthentication = true;\n      const {tokens} = await this._oktaAuth.token.parseFromUrl();\n\n      if (tokens.idToken) {\n        this._oktaAuth.tokenManager.add('idToken', tokens.idToken);\n      }\n      if (tokens.accessToken) {\n        this._oktaAuth.tokenManager.add('accessToken', tokens.accessToken);\n      }\n\n      await this.updateAuthState();\n      const authState = this.getAuthState();\n      if(authState.isAuthenticated) { \n        const location = this.getFromUri();\n        window.location.assign(location);\n      }\n      this._pending.handleAuthentication = null;\n    } catch(error) { \n      this._pending.handleAuthentication = null;\n      this.emitAuthState({ \n        isAuthenticated: false,\n        error,\n        idToken: null,\n        accessToken: null,\n      });\n    } \n    return;\n  }\n\n  clearAuthState(state={}) { \n    this.emitAuthState({ ...AuthService.DEFAULT_STATE, ...state });\n    return;\n  }\n\n  emitAuthState(state) { \n    this._authState = state;\n    this.emit('authStateChange', this.getAuthState());\n    return;\n  }\n\n  getAuthState() { \n    return this._authState;\n  }\n\n  async updateAuthState() {\n    // avoid concurrent updates\n    if( this._pending.authStateUpdate ) { \n      return this._pending.authStateUpdate.promise;\n    }\n\n    // create a promise to return in case of multiple parallel requests\n    this._pending.authStateUpdate = {};\n    this._pending.authStateUpdate.promise  = new Promise( (resolve) => {\n      // Promise can only resolve, any error is in the resolve value\n      // and uncaught exceptions make Front SDKs angry\n      this._pending.authStateUpdate.resolve = resolve;\n    });\n    // copy to return after emitAuthState has cleared the pending object\n    const authStateUpdate = this._pending.authStateUpdate;\n\n    try { \n      const accessToken = await this.getAccessToken();\n      const idToken = await this.getIdToken();\n\n      // Use external check, or default to isAuthenticated if either the access or id token exist\n      const isAuthenticated = this._config.isAuthenticated ? await this._config.isAuthenticated() : !! ( accessToken || idToken );\n\n      this._pending.authStateUpdate = null;\n      this.emitAuthState({ \n        isAuthenticated,\n        idToken,\n        accessToken,\n      });\n    } catch (error) { \n      this._pending.authStateUpdate = null;\n      this.emitAuthState({ \n        isAuthenticated: false,\n        error,\n        idToken: null,\n        accessToken: null,\n      });\n    } \n    authStateUpdate.resolve();\n    return authStateUpdate.promise;\n  }\n\n  async getUser() {\n    const accessToken = await this._oktaAuth.tokenManager.get('accessToken');\n    const idToken = await this._oktaAuth.tokenManager.get('idToken');\n    if (!accessToken || !idToken) { \n      return idToken ? idToken.claims : undefined;\n    }\n\n    return this._oktaAuth.token.getUserInfo();\n  }\n\n  async getIdToken() {\n    try {\n      const idToken = await this._oktaAuth.tokenManager.get('idToken');\n      return idToken.idToken;\n    } catch (err) {\n      // The user no longer has an existing SSO session in the browser.\n      // (OIDC error `login_required`)\n      // Ask the user to authenticate again.\n      return undefined;\n    }\n  }\n\n  async getAccessToken() {\n    try {\n      const accessToken = await this._oktaAuth.tokenManager.get('accessToken');\n      return accessToken.accessToken;\n    } catch (err) {\n      // The user no longer has an existing SSO session in the browser.\n      // (OIDC error `login_required`)\n      // Ask the user to authenticate again.\n      return undefined;\n    }\n  }\n\n  async login(fromUri, additionalParams) {\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    // Update UI pending state\n    this.emitAuthState({ ...this.getAuthState(), isPending: true });\n    // Save the current url before redirect\n    this.setFromUri(fromUri); // will save current location if fromUri is undefined\n    try {\n      if (this._config.onAuthRequired) {\n        return await this._config.onAuthRequired(this);\n      }\n      return await this.redirect(additionalParams);\n    } finally {\n      this._pending.handleLogin = null;\n    }\n  }\n\n  _convertLogoutPathToOptions(redirectUri) { \n    if (typeof redirectUri !== 'string') {\n      return redirectUri;\n    }\n    // If a relative path was passed, convert to absolute URI\n    if (redirectUri.charAt(0) === '/') {\n      redirectUri = window.location.origin + redirectUri;\n    }\n    return {\n      postLogoutRedirectUri: redirectUri,\n    };\n  }\n\n  async logout(options={}) {\n    options = this._convertLogoutPathToOptions(options);\n    await this._oktaAuth.signOut(options);\n    this.clearAuthState();\n  }\n\n  async redirect(additionalParams = {}) {\n    // normalize config object\n    let params = buildConfigObject(additionalParams);\n\n    // set defaults\n    params.responseType = params.responseType\n      || this._config.responseType\n      || ['id_token', 'token'];\n\n    params.scopes = params.scopes\n      || this._config.scopes\n      || ['openid', 'email', 'profile'];\n\n    return this._oktaAuth.token.getWithRedirect(params);\n  }\n\n  setFromUri(fromUri) {\n    // Use current location if fromUri was not passed\n    fromUri = fromUri || window.location.href;\n    // If a relative path was passed, convert to absolute URI\n    if (fromUri.charAt(0) === '/') {\n      fromUri = window.location.origin + fromUri;\n    }\n    sessionStorage.setItem( 'secureRouterReferrerPath', fromUri );\n  }\n\n  getFromUri() {\n    const referrerKey = 'secureRouterReferrerPath';\n    const location = sessionStorage.getItem(referrerKey) || window.location.origin;\n    sessionStorage.removeItem(referrerKey);\n    return location;\n  }\n\n  on( event, callback ) {\n    this._oktaAuth.emitter.on(event, callback, this._oktaAuth.emitter);\n    return () => {\n      this._oktaAuth.emitter.off(event, callback);\n    };\n  }\n\n  emit(event, message ) { \n    this._oktaAuth.emitter.emit(event, message);\n  }\n  \n}\n\nAuthService.DEFAULT_STATE = { \n  isPending: true,\n  isAuthenticated: null,\n  idToken: null,\n  accessToken: null,\n};\n\nexport default AuthService;\n"],"file":"AuthService.js"}