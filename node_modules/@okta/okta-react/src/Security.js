"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _AuthService = _interopRequireDefault(require("./AuthService"));

var _OktaContext = _interopRequireDefault(require("./OktaContext"));

/*
 * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
var Security = function Security(props) {
  var initialAuthService = (0, _react.useMemo)(function () {
    // don't keep spawning new service instances if this component rerenders
    return props.authService || new _AuthService["default"](props);
  }, [props]);

  var _useState = (0, _react.useState)(initialAuthService),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 1),
      authService = _useState2[0];

  var _useState3 = (0, _react.useState)(authService.getAuthState()),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      authState = _useState4[0],
      setAuthState = _useState4[1];

  (0, _react.useEffect)(function () {
    var unsub = authService.on('authStateChange', function () {
      setAuthState(authService.getAuthState());
    });

    if (!authService._oktaAuth.token.isLoginRedirect()) {
      // Trigger an initial change event to make sure authState is latest when not in loginRedirect state
      authService.updateAuthState();
    }

    return unsub;
  }, [authService]);
  return /*#__PURE__*/_react["default"].createElement(_OktaContext["default"].Provider, {
    value: {
      authService: authService,
      authState: authState
    }
  }, props.children);
};

var _default = Security;
exports["default"] = _default;
//# sourceMappingURL=Security.js.map