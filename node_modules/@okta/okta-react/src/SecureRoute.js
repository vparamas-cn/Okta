"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _OktaContext = require("./OktaContext");

var _reactRouterDom = require("react-router-dom");

/*
 * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
var SecureRoute = function SecureRoute(props) {
  var _useOktaAuth = (0, _OktaContext.useOktaAuth)(),
      authService = _useOktaAuth.authService,
      authState = _useOktaAuth.authState;

  var match = (0, _reactRouterDom.useRouteMatch)(props);
  (0, _react.useEffect)(function () {
    // Only process logic if the route matches
    if (!match) {
      return;
    } // Start login if and only if app has decided it is not logged inn


    if (!authState.isAuthenticated && !authState.isPending) {
      authService.login();
    }
  }, [authState.isPending, authState.isAuthenticated, authService, match]);

  if (!authState.isAuthenticated) {
    return null;
  }

  return /*#__PURE__*/_react["default"].createElement(_reactRouterDom.Route, props);
};

var _default = SecureRoute;
exports["default"] = _default;
//# sourceMappingURL=SecureRoute.js.map