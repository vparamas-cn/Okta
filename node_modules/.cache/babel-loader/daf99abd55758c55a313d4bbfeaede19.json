{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _OktaContext = require(\"./OktaContext\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nvar SecureRoute = function SecureRoute(props) {\n  var _useOktaAuth = (0, _OktaContext.useOktaAuth)(),\n      authService = _useOktaAuth.authService,\n      authState = _useOktaAuth.authState;\n\n  var match = (0, _reactRouterDom.useRouteMatch)(props);\n  (0, _react.useEffect)(function () {\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    } // Start login if and only if app has decided it is not logged inn\n\n\n    if (!authState.isAuthenticated && !authState.isPending) {\n      authService.login();\n    }\n  }, [authState.isPending, authState.isAuthenticated, authService, match]);\n\n  if (!authState.isAuthenticated) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_reactRouterDom.Route, props);\n};\n\nvar _default = SecureRoute;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../src/SecureRoute.js"],"names":["SecureRoute","authService","authState","match"],"mappings":";;;;;;;;;AAYA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;AAdA;;;;;;;;;;;;;AAgBA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAa;AAAA,MAAA,YAAA,GACI,CAAA,GAAA,YAAA,CADJ,WACI,GADJ;AAAA,MACvBC,WADuB,GAAA,YAAA,CAAA,WAAA;AAAA,MACVC,SADU,GAAA,YAAA,CAAA,SAAA;;AAE/B,MAAMC,KAAK,GAAG,CAAA,GAAA,eAAA,CAAA,aAAA,EAAd,KAAc,CAAd;AAEA,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;AACd;AACA,QAAI,CAAJ,KAAA,EAAY;AACV;AAHY,KAAA,CAKd;;;AACA,QAAG,CAACD,SAAS,CAAV,eAAA,IAA8B,CAACA,SAAS,CAA3C,SAAA,EAAuD;AACrDD,MAAAA,WAAW,CAAXA,KAAAA;AACD;AARH,GAAA,EASG,CAACC,SAAS,CAAV,SAAA,EAAsBA,SAAS,CAA/B,eAAA,EAAA,WAAA,EATH,KASG,CATH;;AAWA,MAAI,CAACA,SAAS,CAAd,eAAA,EAAgC;AAC9B,WAAA,IAAA;AACD;;AAED,SAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,eAAA,CAAD,KAAA,EADF,KACE,CADF;AAnBF,CAAA;;eA0BeF,W","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport React, { useEffect } from 'react';\nimport { useOktaAuth } from './OktaContext';\nimport { Route, useRouteMatch } from 'react-router-dom';\n\nconst SecureRoute = ( props ) => { \n  const { authService, authState } = useOktaAuth();\n  const match = useRouteMatch(props);\n\n  useEffect(() => {\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n    // Start login if and only if app has decided it is not logged inn\n    if(!authState.isAuthenticated && !authState.isPending) { \n      authService.login();\n    }  \n  }, [authState.isPending, authState.isAuthenticated, authService, match]);\n\n  if (!authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <Route\n      { ...props }\n    />\n  );\n};\n\nexport default SecureRoute;\n"]},"metadata":{},"sourceType":"script"}